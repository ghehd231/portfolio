{"version":3,"sources":["lib/styles/palette.js","components/common/ListScroll.js","components/common/Section.js","components/common/Button.js","components/common/BgSection.js","components/common/Bottom.js","components/about/certification/Certification.js","components/about/certification/CertificationSection.js","components/about/experience/Experience.js","components/about/experience/ExperienceSection.js","components/about/Head.js","components/about/contact/Contact.js","components/about/contact/ContactSection.js","pages/About.js"],"names":["palette","black","white","gray","text_gray","main","sub","button","bgWhite","bgBlack","bgGray","bgDarkGray","bgRed","red","List","vertical","scroll","content","Component","component","scrollRef","useRef","useState","hasScroll","setHasScroll","leftLocation","setLeftLocation","useEffect","resizeWindow","window","addEventListener","removeEventListener","useCallback","hasHorizontalScrollbar","current","scrollWidth","clientWidth","onScroll","scrollLeft","onClick","e","left","scrollTo","top","scrollTop","behavior","SkillListBlock","ref","MoveButton","map","item","id","styled","props","css","div","React","memo","Section","title","SectionWrap","SectionBlock","SectionTitleBox","Title","ListScroll","section","Button","to","StyledLink","children","StyledButton","disabled","disable","buttonStyle","mini","marginleft","category","iconright","Link","BgSection","bgName","column","Bg","MainBolok","GradientBox","MainWrap","indexOf","Bottom","StyledBottom","Certification","CertificationItem","ImgBox","src","thumbnail","alt","MetaBox","MataTitle","MetaDesc","date","p","CertificationSection","certifications","Experience","ExperienceItem","desc","ExperienceSection","experiences","data","Head","innerWidth","windowWidth","setWindowWidth","width","ButtonBox","links","link","ButtonLink","pathname","path","target","name","icon","h1","Contact","ContactContainer","MetaPhone","phone","MetaEmail","Email","ContactSection","contacts","About"],"mappings":"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","file":"static/js/7.9f776420.chunk.js","sourcesContent":["const palette = {\n  black: '#000000',\n  white: '#FFFFFF',\n  gray: '#222222',\n  text_gray: '#AAAAAA',\n  main: '#A87BE0',\n  sub: '#BB86FC',\n  button: {\n    bgWhite: '#FFFFFF',\n    bgBlack: '#000000',\n    bgGray: '#AAAAAA',\n    bgDarkGray: 'rgb(34,34,34)',\n    bgRed: 'rgba(221, 0, 129, 0.2)',\n    black: '#000000',\n    white: '#FFFFFF',\n    gray: '#AAAAAA',\n    red: 'rgb(236, 93, 92)',\n  },\n};\nexport default palette;\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { RiArrowLeftSLine, RiArrowRightSLine } from 'react-icons/ri';\n\nconst List = ({ vertical, scroll, content, component: Component }) => {\n  const scrollRef = useRef(null);\n  const [hasScroll, setHasScroll] = useState();\n  // const [scrollHeight, setScrollHeight] = useState();\n  const [leftLocation, setLeftLocation] = useState(false);\n\n  useEffect(\n    () => {\n      resizeWindow();\n      window.addEventListener('resize', resizeWindow);\n      return () => window.removeEventListener('resize', resizeWindow);\n    },\n    [hasScroll],\n  );\n\n  const resizeWindow = useCallback(() => {\n    const hasHorizontalScrollbar = scrollRef.current.scrollWidth > scrollRef.current.clientWidth;\n    setHasScroll(hasHorizontalScrollbar);\n  }, []);\n\n  const onScroll = useCallback(() => {\n    scrollRef.current.scrollLeft === 0 ? setLeftLocation(false) : setLeftLocation(true);\n  }, []);\n  const onClick = useCallback(e => {\n    const left = leftLocation ? 0 : scrollRef.current.scrollWidth;\n    scrollRef.current.scrollTo({\n      top: window.scrollTop,\n      left: left,\n      behavior: 'smooth',\n    });\n    setLeftLocation(!leftLocation);\n  }, []);\n\n  return (\n    <SkillListBlock ref={scrollRef} vertical={vertical} scroll={scroll} onScroll={onScroll}>\n      {hasScroll &&\n        <MoveButton left={leftLocation} onClick={onClick}>\n          {leftLocation ? <RiArrowLeftSLine /> : <RiArrowRightSLine />}\n        </MoveButton>}\n      {content && content.map(item => <Component key={item.id} item={item} />)}\n    </SkillListBlock>\n  );\n};\n\nconst MoveButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 50%;\n  background: ${palette.white};\n  cursor: pointer;\n  color: ${palette.gray};\n  align-self: center;\n  outline: 0;\n  border: 0;\n  position: absolute;\n  font-size: 1.5rem;\n  right: -0.1rem;\n  ${props =>\n    props.left &&\n    css`\n      right: unset;\n      left: -0.1rem;\n    `};\n  @media only screen and (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst SkillListBlock = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  ${props =>\n    props.vertical &&\n    css`\n      flex-direction: column;\n    `} overflow-x: auto;\n  padding-bottom: 1rem;\n  &::-webkit-scrollbar {\n    /* visibility: hidden; */\n    width: 0px;\n  }\n  @media only screen and (max-width: 1200px) {\n    &::-webkit-scrollbar {\n      /* width: 4px;\n      height: 4px;\n      border-radius: 6px;\n      background: rgba(255, 255, 255, 0.2); */\n      width: 0px;\n    }\n    &::-webkit-scrollbar-thumb {\n      /* background-color: rgba(255, 255, 255, 0.3);\n      border-radius: 6px; */\n    }\n  }\n  ${props =>\n    props.scroll &&\n    css`\n    overflow-x: auto;\n    flex-wrap: nowrap;\n  `};\n`;\n\nexport default React.memo(List);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport ListScroll from './ListScroll';\n\nconst Section = ({ title, sub, scroll, vertical, component: Component, content }) => {\n  return (\n    <SectionWrap>\n      <SectionBlock sub={sub}>\n        <SectionTitleBox sub={sub}>\n          <Title sub={sub}>\n            {title}\n          </Title>\n        </SectionTitleBox>\n        <ListScroll scroll={scroll} content={content} component={Component} vertical={vertical} />\n      </SectionBlock>\n    </SectionWrap>\n  );\n};\n\nconst SectionWrap = styled.section`\n  width: 100%;\n  background: ${palette.black};\n  z-index: 100;\n`;\n\nconst SectionBlock = styled.div`\n  position: relative;\n  padding: 3rem 1rem;\n  max-width: 70rem;\n  width: 100%;\n  margin: 0 auto;\n  background: ${palette.black};\n  z-index: 100;\n  ${props =>\n    props.sub &&\n    css`\n      padding: 2rem 1rem;\n    `} @media only screen and (max-width: 480px) {\n    padding: 2rem 1rem;\n  }\n`;\n\nconst SectionTitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n  ${props =>\n    props.sub &&\n    css`\n      margin-bottom: 0.5rem;\n    `} @media only screen and (max-width: 480px) {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Title = styled.div`\n  color: ${palette.white};\n  font-size: 2.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  ${props =>\n    props.sub &&\n    css`\n      font-size: 1.8rem;\n    `} @media only screen and (max-width: 480px) {\n    font-size: 1.8rem;\n    margin-bottom: 0;\n  }\n`;\n\nexport default React.memo(Section);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst Button = props => {\n  return props.to\n    ? <StyledLink {...props}>\n        {props.children}\n      </StyledLink>\n    : <StyledButton {...props} disabled={props.disable} />;\n};\n\nconst buttonStyle = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  background: transparent;\n  border: 1px solid ${palette.white};\n  border-radius: 2px;\n  padding: 0.5rem 1rem;\n  transition: all 0.2s ease-in;\n  color: ${palette.white};\n  cursor: ${props => (props.disable ? 'disable' : 'pointer')};\n  font-size: ${props => (props.mini ? '.8rem' : '1rem')};\n  ${props => props.mini && 'height:2rem'};\n  ${props => props.marginleft && 'margin-left:.5rem'};\n\n  &:hover {\n    ${props =>\n      props.disable\n        ? ''\n        : `background: ${palette.white};\n    color: ${palette.black};`}\n  }\n  ${props =>\n    props.category &&\n    css`\n      padding: 0.3rem 0.5rem;\n      border-color: ${palette.gray};\n      color: ${palette.text_gray};\n    `}\n\n  &+& {\n    /* margin-left: 1rem; */\n  }\n  \n  & > svg {\n    ${props => (props.iconright ? 'margin-right' : 'margin-left')}:0.3rem;\n  }\n\n  &:disabled {\n    border-color: ${palette.gray};\n    color: ${palette.text_gray};\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 0.8rem;\n    ${props => props.mini && ' padding: 0.2rem 0.5rem;'};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\nconst StyledButton = styled.button`${buttonStyle};`;\n\nexport default React.memo(Button);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BgSection = ({ bgName, column, children }) => {\n  return (\n    <>\n      <Bg bgName={bgName} />\n      <MainBolok>\n        <GradientBox>\n          <MainWrap column={column}>{children}</MainWrap>\n        </GradientBox>\n      </MainBolok>\n    </>\n  );\n};\nconst Bg = styled.div`\n  width: 100%;\n  height: 32rem;\n  position: fixed;\n  background: ${(props)=> `url(\"images/${props.bgName}.${props.bgName.indexOf('gif')>0 ? \"gif\" : \"jpg\" }\")`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  top: 0;\n  @media only screen and (max-width: 600px) {\n    height: 23rem;\n  }\n`;\nconst MainBolok = styled.section`\n  width: 100%;\n  height: 32rem;\n  position: relative;\n  @media only screen and (max-width: 600px) {\n    height: 23rem;\n  }\n`;\n\nconst GradientBox = styled.div`\n  width: 100%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  bottom: 0;\n  height: 15rem;\n  align-items: center;\n  background: linear-gradient(\n    360deg,\n    rgba(0, 0, 0, 1) 8.98%,\n    rgba(0, 0, 0, 0) 100%\n  );\n  @media only screen and (max-width: 600px) {\n    height: 7.5rem;\n  }\n`;\nconst MainWrap = styled.div`\n  width: 100%;\n  max-width: 70rem;\n  margin: 0 auto;\n  height: 100%;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media only screen and (max-width: 480px) {\n    ${(props) =>\n     props.column && \"flex-direction:column;  align-items: flex-start;\"};\n    }\n`;\n\n\nexport default React.memo(BgSection);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Bottom = () => {\n  return <StyledBottom />;\n};\n\nconst StyledBottom = styled.div`\n  height: 10rem;\n  @media only screen and (max-width: 850px) {\n    height: 6rem;\n  }\n  @media only screen and (max-width: 600px) {\n    height: 3rem;\n  }\n`;\n\nexport default React.memo(Bottom);\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../../lib/styles/palette';\nconst Certification = ({ item }) => {\n  return (\n    <CertificationItem>\n      <ImgBox>\n        <img src={`images/certification/${item.thumbnail}.png`} alt=\"certification logo\" />\n      </ImgBox>\n\n      <MetaBox>\n        <MataTitle>\n          {item.title}\n        </MataTitle>\n        <MetaDesc>\n          {item.date}\n        </MetaDesc>\n      </MetaBox>\n    </CertificationItem>\n  );\n};\n\nconst CertificationItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  & + & {\n    margin-left: 2rem;\n    @media only screen and (max-width: 850px) {\n      margin-left: 0;\n    }\n  }\n  @media only screen and (max-width: 850px) {\n    width: 47%;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst ImgBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  height: 3rem;\n  border-radius: 0.2rem;\n  background: ${palette.white};\n  margin-bottom: 0.7rem;\n  & > img {\n    height: 80%;\n  }\n  @media only screen and (max-width: 450px) {\n    height: 2.2rem;\n  }\n  }\n`;\n\nconst MetaBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${palette.white};\n`;\nconst MataTitle = styled.p`\n  font-size: 1.1rem;\n  font-weight: 500;\n  margin: 0;\n  @media only screen and (max-width: 450px) {\n    font-size: 1rem;\n  }\n`;\nconst MetaDesc = styled.p`\n  font-size: 0.9rem;\n  font-weight: 400;\n  margin: 0;\n  color: ${palette.text_gray};\n  @media only screen and (max-width: 450px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport default React.memo(Certification);\n","import React from 'react';\nimport Section from '../../common/Section';\nimport Certification from './Certification';\n\nconst CertificationSection = () => {\n  return <Section title=\"Certification\" sub component={Certification} content={certifications} />;\n};\n\nconst certifications = [\n  {\n    id: 1,\n    title: '운전면허자격증',\n    thumbnail: 'drive_logo',\n    date: '2019.05',\n  },\n];\n\nexport default React.memo(CertificationSection);\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../../lib/styles/palette';\nconst Experience = ({ item }) => {\n  return (\n    <ExperienceItem>\n      <img src={`images/company/${item.thumbnail}.png`} alt=\"experience logo\" />\n      <MetaBox>\n        <MataTitle>\n          {item.title}\n        </MataTitle>\n        <MetaDesc>\n          {item.desc}\n        </MetaDesc>\n        <MetaDesc>\n          {item.date}\n        </MetaDesc>\n      </MetaBox>\n    </ExperienceItem>\n  );\n};\n\nconst ExperienceItem = styled.div`\n  display: flex;\n  align-items: center;\n  & > img {\n    width: 5rem;\n    margin-right: 1rem;\n    @media only screen and (max-width: 450px) {\n      width: 4rem;\n    }\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nconst MetaBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${palette.white};\n`;\nconst MataTitle = styled.p`\n  font-size: 1.1rem;\n  font-weight: 500;\n  margin: 0;\n  @media only screen and (max-width: 450px) {\n    font-size: 1rem;\n  }\n`;\nconst MetaDesc = styled.p`\n  font-size: 0.9rem;\n  font-weight: 400;\n  margin: 0;\n  color: ${palette.text_gray};\n  @media only screen and (max-width: 450px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport default React.memo(Experience);\n","import React from 'react';\nimport Section from '../../common/Section';\nimport Experience from './Experience';\n\nconst ExperienceSection = () => {\n  return <Section title=\"Experience\" sub vertical component={Experience} content={experiences} />;\n};\n\nconst experiences = [\n  {\n    id: 1,\n    title: '웹개발팀',\n    desc: 'HTML, CSS, Javascript, JQuery, ASP, MSSQL',\n    thumbnail: 'ellen',\n    date: '2018.02 - 2019.12',\n  },\n  {\n    id: 2,\n    title: 'FastCampus React로 구현하는 웹 어플리케이션 제작 오프라인 강의',\n    desc: 'React, Prettier, ESLint, Redux, Redux-middleware, TypeScript 기초, code-splitting',\n    thumbnail: 'fastcampus',\n    date: '2019.01 - 2019.03',\n  },\n  {\n    id: 3,\n    title: '우아한테크 러닝3기 (React&TypeScript)',\n    desc: 'Javascript, React, TypesScript, Redux',\n    thumbnail: 'wooahan',\n    data: '2020.09 - 2020.10',\n  },\n];\n\nexport default React.memo(ExperienceSection);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport BgSection from '../common/BgSection';\nimport Button from '../common/Button';\nimport { FaBars, FaGithub } from 'react-icons/fa';\n\nconst Head = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(\n    () => {\n      resizeWindow();\n      window.addEventListener('resize', resizeWindow);\n    },\n    [windowWidth],\n  );\n\n  const resizeWindow = useCallback(() => {\n    const width = window.innerWidth;\n    setWindowWidth(width);\n  }, []);\n  const column = windowWidth < 600;\n  return (\n    <BgSection bgName=\"main-bg4\" column={column}>\n      <div>\n        <Title>About</Title>\n      </div>\n      <ButtonBox>\n        {links.map(link => <ButtonLink key={link.id} link={link} />)}\n      </ButtonBox>\n    </BgSection>\n  );\n};\n\nconst ButtonLink = ({ link }) => {\n  return (\n    <Button\n      to={{\n        pathname: link.path,\n      }}\n      target=\"_blank\"\n    >\n      {link.name}\n      {link.icon}\n    </Button>\n  );\n};\n\nconst Title = styled.h1`\n  color: ${palette.white};\n  font-size: 2.7rem;\n  font-weight: 700;\n  margin: 0;\n  @media only screen and (max-width: 600px) {\n    font-size: 2.2rem;\n  }\n`;\nconst ButtonBox = styled.div`display: flex;`;\n\nconst links = [\n  {\n    id: 1,\n    name: 'Resume',\n    path: 'https://www.notion.so/ghehd231/Hello-world-cc9096d09e024843a0db40f584e7b7b7',\n    icon: <FaBars />,\n  },\n  {\n    id: 2,\n    name: 'Github',\n    path: 'https://github.com/ghehd231/portfolio',\n    icon: <FaGithub />,\n  },\n];\nexport default React.memo(Head);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BiPhoneCall } from 'react-icons/bi';\nimport { HiOutlineMail } from 'react-icons/hi';\nimport palette from '../../../lib/styles/palette';\n\nconst Contact = ({ item }) => {\n  return (\n    <ContactContainer>\n      <MetaBox>\n        <MataTitle>\n          {item.title}\n        </MataTitle>\n        <MetaPhone>\n          <BiPhoneCall />\n          {item.phone}\n        </MetaPhone>\n        <MetaEmail>\n          <HiOutlineMail />\n          {item.Email}\n        </MetaEmail>\n      </MetaBox>\n    </ContactContainer>\n  );\n};\n\nconst ContactContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst MetaBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${palette.white};\n`;\nconst MataTitle = styled.p`\n  font-size: 1.1rem;\n  font-weight: 500;\n  margin: 0;\n`;\nconst MetaPhone = styled.div`\n  font-size: 0.9rem;\n  font-weight: 500;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  & > svg {\n    margin-right: 0.3rem;\n  }\n`;\nconst MetaEmail = styled.div`\n  font-size: 0.9rem;\n  font-weight: 500;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  margin-top: 0.5rem;\n  & > svg {\n    margin-right: 0.3rem;\n  }\n`;\nexport default React.memo(Contact);\n","import React from 'react';\nimport Section from '../../common/Section';\nimport Contact from './Contact';\nconst ContactSection = () => {\n  return <Section title=\"contact\" component={Contact} sub vertical content={contacts} />;\n};\n\nconst contacts = [\n  {\n    id: 1,\n    phone: '010-7739-9829',\n    Email: 'ghehd231@naver.com',\n  },\n];\nexport default React.memo(ContactSection);\n","import React from 'react';\nimport CertificationSection from \"../components/about/certification/CertificationSection\";\nimport ExperienceSection from \"../components/about/experience/ExperienceSection\";\nimport Head from \"../components/about/Head\";\nimport ContactSection from \"../components/about/contact/ContactSection\";\nimport Bottom from \"../components/common/Bottom\";\nconst About = () => {\n  return (<>\n  <Head />\n  <ExperienceSection />\n  <CertificationSection />  \n  <ContactSection/>\n  <Bottom />\n</>);\n};\n\nexport default About;\n"],"sourceRoot":""}