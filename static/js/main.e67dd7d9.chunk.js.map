{"version":3,"sources":["contexts/projects.js","App.js","index.js","withSplitting.js","pages/index.js"],"names":["inintialProjects","id","category","type","title","stack","summary","desc","thumbnail","image","demo","github","notion","ProjectStateContext","createContext","ProjectDispatchContext","projectReducer","state","action","filter","project","Error","ProjectProvider","children","useReducer","dispatch","Provider","value","useProjectState","useContext","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById","withSplitting","getComponent","props","Splitted","then","default","setState","this","Component","MainSection","ProjectSection","SkillSection","Home","Detail","About"],"mappings":"+LAEMA,EAAmB,CACvB,CACEC,GAAI,EACJC,SAAU,MACVC,KAAM,OACNC,MAAO,UACPC,MAAO,CACL,QACA,OACA,OACA,UACA,wBACA,UACA,QACA,mBACA,oBACA,SAEFC,QAAS,qGACTC,KAAM,2QACNC,UAAW,yCACXC,MAAO,CAAC,YAAa,YAAa,YAAa,YAAa,YAAa,aACzEC,KAAM,yBACNC,OAAQ,sCACRC,OAAQ,2EAEV,CACEX,GAAI,EACJC,SAAU,YACVC,KAAM,OACNC,MAAO,oDACPC,MAAO,CAAC,QAAS,mBAAoB,YACrCC,QAAS,0HACTC,KAAM,0HACNC,UAAW,qCACXC,MAAO,CAAC,cAAe,cAAe,cAAe,cAAe,eACpEC,KAAM,IACNC,OAAQ,yCAEV,CACEV,GAAI,EACJC,SAAU,MACVC,KAAM,UACNC,MAAO,iEACPC,MAAO,CAAC,OAAQ,MAAO,aAAc,MAAO,QAAS,YACrDC,QAAS,kKACTC,KAAM,4NACNC,UAAW,2CACXC,MAAO,CAAC,YAAa,YAAa,YAAa,aAC/CC,KACE,+FAKAG,EAAsBC,0BACtBC,EAAyBD,0BAG/B,SAASE,EAAeC,EAAOC,GAC7B,OAAQA,EAAOf,MACb,IAAK,MACH,OAAOc,EAAME,QAAO,SAAAC,GAAO,OAAIA,EAAQnB,KAAOiB,EAAOjB,MACvD,IAAK,SACH,OAAOgB,EAAME,QAAO,SAAAC,GAAO,OAAIA,EAAQlB,WAAagB,EAAOhB,YAC7D,QACE,MAAM,IAAImB,MAAJ,iCAAoCH,EAAOf,QAIhD,SAASmB,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SAAY,EAClBC,qBAAWR,EAAgBhB,GADT,mBACrCiB,EADqC,KAC9BQ,EAD8B,KAE5C,OACE,cAACZ,EAAoBa,SAArB,CAA8BC,MAAOV,EAArC,SACE,cAACF,EAAuBW,SAAxB,CAAiCC,MAAOF,EAAxC,SACGF,MAMF,SAASK,IACd,OAAOC,qBAAWhB,K,yKC3DLiB,MApBf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAeC,SAAS,aAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACE,cAAC,IAAD,cCZZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,qSCqBXC,EA5BO,SAAAC,GAyBpB,OAzBoC,kDAOlC,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IALRxB,MAAQ,CACNyB,SAAU,MAKVF,IAAeG,MAAK,YAA4B,IAAhBD,EAAe,EAAxBE,QACrB,EAAKC,SAAS,CACZH,gBAJa,EAPe,qDAgBxB,IACAA,EAAaI,KAAK7B,MAAlByB,SACR,OAAKA,EAGE,cAACA,EAAD,eAAcI,KAAKL,QAFjB,SAnBuB,GAERM,cCFjBC,EAAcT,GAAc,kBAAM,8DAClCU,EAAiBV,GAAc,kBAC1C,8DAEWW,EAAeX,GAAc,kBAAM,4EAEnCY,EAAOZ,GAAc,kBAAM,uDAC3Ba,EAASb,GAAc,kBAAM,2EAC7Bc,EAAQd,GAAc,kBAAM,8E","file":"static/js/main.e67dd7d9.chunk.js","sourcesContent":["import { useReducer, useContext, createContext } from 'react';\n\nconst inintialProjects = [\n  {\n    id: 1,\n    category: 'All',\n    type: 'side',\n    title: 'Foodwar',\n    stack: [\n      'React',\n      'SASS',\n      'Node',\n      'Express',\n      'AWS(EC2, Rout53, SES)',\n      'MongoDB',\n      'Redux',\n      'Redux-middleware',\n      'React-geolocation',\n      'Nginx',\n    ],\n    summary: '맛집 검색 && 점심시간 음식 추천 사이트',\n    desc: '점심시간의 음식 선택의 고민을 줄여주기 위해 현제 위치를 기반하여 맛집을 검색해 추천해주는 사이트',\n    thumbnail: 'images/project/thumb/foodwar-thumb.png',\n    image: ['foodwar01', 'foodwar02', 'foodwar03', 'foodwar04', 'foodwar05', 'foodwar06'],\n    demo: 'https://foodwar.kro.kr',\n    github: 'https://github.com/food-war/foodwar',\n    notion: 'https://www.notion.so/ghehd231/Foodwar-d6025c64483540c1a8c40d73ffff55b9',\n  },\n  {\n    id: 2,\n    category: 'Front-end',\n    type: 'side',\n    title: '포트폴리오 페이지',\n    stack: ['React', 'Styled-component', 'gh-pages'],\n    summary: '자기소개 및 프로젝트 경험을 보여주는 페이지',\n    desc: '자기소개 및 프로젝트 경험을 보여주는 페이지',\n    thumbnail: 'images/project/thumb/portfolio.png',\n    image: ['portfolio01', 'portfolio02', 'portfolio03', 'portfolio04', 'portfolio05'],\n    demo: '/',\n    github: 'https://github.com/ghehd231/portfolio',\n  },\n  {\n    id: 3,\n    category: 'All',\n    type: 'company',\n    title: '제휴사 판매 통계페이지',\n    stack: ['HTML', 'CSS', 'Javascript', 'Asp', 'Mssql', 'Chart.js'],\n    summary: '제휴사의 판매 현황을 기간,시간별 그래프로 볼 수 있는 페이지',\n    desc: '제휴사의 판매 현황을 기간, 시간별 그래프로 회사의 전광판을 통해 볼 수 있는 페이지',\n    thumbnail: 'images/project/thumb/franken-alience.png',\n    image: ['alience01', 'alience02', 'alience03', 'alience04'],\n    demo:\n      'http://admin.frankenmono.com/hd_test/alliance_styleShare.asp?start_year=2020&start_month=2',\n  },\n];\n\n//context 객체 만듬\nconst ProjectStateContext = createContext();\nconst ProjectDispatchContext = createContext();\n\n//reducer\nfunction projectReducer(state, action) {\n  switch (action.type) {\n    case 'GET':\n      return state.filter(project => project.id === action.id);\n    case 'FILTER':\n      return state.filter(project => project.category === action.category);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nexport function ProjectProvider({ children }) {\n  const [state, dispatch] = useReducer(projectReducer, inintialProjects);\n  return (\n    <ProjectStateContext.Provider value={state}>\n      <ProjectDispatchContext.Provider value={dispatch}>\n        {children}\n      </ProjectDispatchContext.Provider>\n    </ProjectStateContext.Provider>\n  );\n}\n\nexport function useProjectState() {\n  return useContext(ProjectStateContext);\n}\n\nexport function useProjectDispatch() {\n  return useContext(ProjectDispatchContext);\n}\n","import './App.css';\nimport { ProjectProvider } from './contexts/projects';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { About, Detail, Home } from './pages';\n\nfunction App() {\n  return (\n    <ProjectProvider>\n      <BrowserRouter basename=\"/portfolio\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/detail/:projectId\">\n            <Detail />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </ProjectProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import React, { Component } from 'react';\n\nconst withSplitting = getComponent => {\n  // 여기서 getComponent 는 () => import('./SplitMe') 의 형태로 함수가 전달되야합니다.\n  class WithSplitting extends Component {\n    state = {\n      Splitted: null,\n    };\n\n    constructor(props) {\n      super(props);\n      getComponent().then(({ default: Splitted }) => {\n        this.setState({\n          Splitted,\n        });\n      });\n    }\n\n    render() {\n      const { Splitted } = this.state;\n      if (!Splitted) {\n        return null;\n      }\n      return <Splitted {...this.props} />;\n    }\n  }\n\n  return WithSplitting;\n};\n\nexport default withSplitting;\n","import withSplitting from '../withSplitting';\n\nexport const MainSection = withSplitting(() => import('../components/home/main/MainSection'));\nexport const ProjectSection = withSplitting(() =>\n  import('../components/home/project/ProjectSection'),\n);\nexport const SkillSection = withSplitting(() => import('../components/home/skill/SkillSection'));\n\nexport const Home = withSplitting(() => import('./Home'));\nexport const Detail = withSplitting(() => import('./Detail'));\nexport const About = withSplitting(() => import('./About'));\n"],"sourceRoot":""}